"Represents a schema"
schema {
  query: RootQueryType
  mutation: RootMutationType
}

"Represents an uploaded file."
scalar Upload

type Comment {
  id: ID
  content: String
  upvoteCount: Int
  hasUpvoted: Boolean
  author: User
  children: [Comment]
}

type Skill {
  id: ID!
  name: String!
  slug: String!
  description: String
}

type Post {
  id: ID!
  title: String!
  slug: String!
  body: String
  likesCount: Int
  coverUrl: String
  skills: [Skill]
  author: User!
  comments: [Comment]
  hasLiked: Boolean
}

type MutatedUser {
  user: User
  errors: [String]
}

type MutatedUserWithAccessToken {
  user: User
  accessToken: String
  errors: [String]
}

type RootMutationType {
  register(
    email: String!, password: String!, name: String!, handle: String, websiteUrl: String, githubUrl: String, dribbbleUrl: String, avatar: Upload
  ): MutatedUser
  login(email: String!, password: String!): MutatedUserWithAccessToken
  createPost(title: String!, slug: String!, body: String!, cover: Upload, skills: [ID]): MutatedPost
  likePost(postId: ID!): MutatedPost
  dislikePost(postId: ID!): MutatedPost
  commentPost(postId: ID!, content: String!, parentId: ID): MutatedComment
  upvoteComment(commentId: ID!): MutatedComment
}

type RootQueryType {
  user: User
  posts: [Post]
  postSlug(slug: String): Post
  skills: [Skill]
}

type MutatedComment {
  comment: Comment
  errors: [String]
}

type MutatedPost {
  post: Post
  errors: [String]
}

type User {
  id: ID!
  name: String!
  email: String
  handle: String
  websiteUrl: String
  githubUrl: String
  dribbbleUrl: String
  avatarUrl: String
}
